{"version":3,"sources":["components/Mixin/index.tsx","views/project/ProjectCollection.tsx","../node_modules/@ant-design/icons-svg/es/asn/SnippetsOutlined.js","../node_modules/@ant-design/icons/es/icons/SnippetsOutlined.js","views/project/index.tsx","apis/scrum.ts","apis/tasks.ts","apis/project.ts","apis/index.ts"],"names":["listMixin","ComposedComponent","props","instance","fetchAction","getDetailAction","createAction","updateAction","deleteAction","beforeFetch","afterFtech","searchText","pagination","showSizeChanger","onShowSizeChange","bind","onChange","pageChange","pageSizeOptions","hideOnSinglePage","pageIndex","pageSize","total","state","data","loading","isCollectionVisible","entity","this","getList","e","code","keyCode","value","target","current","page","setState","isVisible","isRefresh","values","openCollection","closeCollection","_id","then","init","pi","ps","keyword","res","id","err","console","log","error","record","index","searchAction","getRowKey","collectionCallBack","editEntity","deleteEntity","ref","getInstance","Component","ProjectCollecrtionComponent","preventDefault","callback","rule","isPhone","labelCol","span","wrapperCol","onFinish","handleSubmit","initialValues","name","description","Item","label","rules","required","message","placeholder","rows","type","htmlType","className","i18n","t","onClick","cancel","SnippetsOutlined","React","AntdIcon","Object","assign","icon","SnippetsOutlinedSvg","displayName","UserView","getProjects","getProjectDetail","createProject","updateProject","deleteProject","history","push","columns","title","dataIndex","key","render","text","width","placement","detailAction","EditOutlined","editAction","DeleteOutlined","rowKey","bordered","dataSource","onKeyDown","suffix","SearchOutlined","PlusOutlined","getTable","visible","MODAL_SIZE","md","destroyOnClose","footer","onCancel","getProjectScrums","params","request","url","method","createScrum","updateScrum","createTask","updateTask","deleteTask","getTaskDetail","getTasks","sortTasks","summaryTask","getSummary"],"mappings":"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","file":"static/js/958.b38e9bd9.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\ntype IListState = {\n  data: Record<string, unknown>[]\n  loading: boolean\n  isCollectionVisible: boolean\n  entity: Record<string, unknown>\n}\nexport const listMixin = (ComposedComponent) =>\n  class extends Component<any, IListState> {\n    private instance = null\n    private fetchAction = null\n    private getDetailAction = null\n    private createAction = null\n    private updateAction = null\n    private deleteAction = null\n\n    private beforeFetch = null\n    private afterFtech = null\n    private searchText = ''\n    private pagination = {\n      showSizeChanger: true,\n      onShowSizeChange: this.onShowSizeChange.bind(this),\n      onChange: this.pageChange.bind(this),\n      pageSizeOptions: ['10', '20', '30', '40', '50', '60', '100'],\n      hideOnSinglePage: false,\n      pageIndex: 1,\n      pageSize: 20,\n      total: 0,\n    }\n    constructor(props) {\n      super(props)\n      this.state = {\n        data: [],\n        loading: false,\n        isCollectionVisible: false,\n        entity: null,\n      }\n    }\n\n    componentDidMount() {\n      this.beforeFetch()\n      this.getList()\n      this.afterFtech()\n    }\n\n    searchAction(e) {\n      const code = e.keyCode\n      const { value } = e.target\n      if (code === 13) {\n        this.searchText = value\n        this.pagination.pageIndex = 1\n        this.pagination.pageSize = 20\n        this.getList()\n      }\n    }\n\n    onShowSizeChange(current, pageSize) {\n      this.pagination.pageSize = pageSize\n      this.getList()\n    }\n\n    pageChange(page) {\n      this.pagination.pageIndex = page\n      this.getList()\n    }\n\n    openCollection() {\n      this.setState({\n        isCollectionVisible: true,\n      })\n    }\n\n    closeCollection() {\n      this.setState({\n        isCollectionVisible: false,\n      })\n    }\n\n    collectionCallBack({ isVisible, isRefresh, values = '' }) {\n      isVisible && this.openCollection()\n      !isVisible && this.closeCollection()\n      if (values) {\n        if (!this.state.entity) {\n          // 新建\n          this.createAction(values).then(() => {\n            this.pagination.pageIndex = 1\n            this.getList()\n          })\n        } else {\n          // 修改\n          this.updateAction(this.state.entity._id, values).then(() => {\n            this.pagination.pageIndex = 1\n            this.getList()\n          })\n        }\n      } else {\n        isRefresh && this.getList()\n      }\n    }\n\n    getInstance(instance) {\n      if (instance) {\n        this.instance = instance\n        const {\n          fetchAction = () => {},\n          getDetailAction = () => {},\n          createAction = () => {},\n          updateAction = () => {},\n          deleteAction = () => {},\n          beforeFetch = () => {},\n          afterFtech = () => {},\n        } = this.instance.init()\n        this.fetchAction = fetchAction\n        this.getDetailAction = getDetailAction\n        this.createAction = createAction\n        this.updateAction = updateAction\n        this.deleteAction = deleteAction\n        this.beforeFetch = beforeFetch\n        this.afterFtech = afterFtech\n      }\n    }\n\n    getList() {\n      this.setState({\n        loading: true,\n      })\n      this.fetchAction({\n        pi: this.pagination.pageIndex - 1,\n        ps: this.pagination.pageSize,\n        keyword: this.searchText,\n      }).then((res) => {\n        const { page, total, data } = res\n        this.pagination.total = total\n        this.pagination.pageIndex = page\n        this.setState({\n          loading: false,\n          data,\n        })\n      })\n    }\n\n    editEntity(id: string) {\n      this.getDetailAction(id).then(\n        (data) => {\n          this.setState({\n            entity: data,\n            isCollectionVisible: true,\n          })\n        },\n        (err) => {\n          console.log(err)\n        },\n      )\n    }\n\n    deleteEntity(id: string) {\n      this.deleteAction(id).then(\n        () => {\n          this.pagination.pageIndex = 1\n          this.getList()\n        },\n        (error) => {\n          console.log(error)\n        },\n      )\n    }\n\n    getRowKey(record, index) {\n      return record.id || record._id || index\n    }\n\n    render() {\n      const { loading, data, isCollectionVisible, entity } = this.state\n      return (\n        <ComposedComponent\n          loading={loading}\n          data={data}\n          entity={entity}\n          pagination={this.pagination}\n          isCollectionVisible={isCollectionVisible}\n          searchAction={this.searchAction.bind(this)}\n          openCollection={this.openCollection.bind(this)}\n          closeCollection={this.closeCollection.bind(this)}\n          getRowKey={this.getRowKey.bind(this)}\n          getList={this.getList.bind(this)}\n          collectionCallBack={this.collectionCallBack.bind(this)}\n          editEntity={this.editEntity.bind(this)}\n          deleteEntity={this.deleteEntity.bind(this)}\n          {...this.props}\n          ref={this.getInstance.bind(this)}\n        />\n      )\n    }\n  }\n","/*\n * @Author: D.Y\n * @Date: 2021-02-04 15:27:20\n * @LastEditTime: 2021-04-20 16:05:37\n * @LastEditors: D.Y\n * @FilePath: /arthemis-client/src/views/project/ProjectCollection.tsx\n * @Description:\n */\nimport React, { Component } from 'react'\nimport { Form, Input, Button } from 'antd'\nimport i18n from 'i18next'\nimport { isPhone } from '@utils/index'\nimport type { IProject } from '@interfaces/project'\nimport TextArea from 'antd/lib/input/TextArea'\n\ntype IProjectCollectionProps = {\n  callback: ({ isVisible, isRefresh, values }) => unknown\n  form: any\n  entity: IProject\n}\ntype IProjectCollectionState = {\n  loading: boolean\n}\n\nexport default class ProjectCollecrtionComponent extends Component<\n  IProjectCollectionProps,\n  IProjectCollectionState\n> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n    }\n  }\n  componentDidMount() {\n    // console.log(this.props.entity);\n  }\n  cancel(e) {\n    e.preventDefault()\n    this.props.callback({\n      isVisible: false,\n      isRefresh: false,\n      values: '',\n    })\n  }\n  handleSubmit(values) {\n    this.props.callback({\n      isVisible: false,\n      isRefresh: true,\n      values,\n    })\n  }\n  checkPhone(rule, value, callback) {\n    isPhone(value) ? callback() : callback('请输入正确的手机号码')\n  }\n  render() {\n    const { entity } = this.props\n    return (\n      <Form\n        labelCol={{ span: 24 }}\n        wrapperCol={{ span: 24 }}\n        onFinish={this.handleSubmit.bind(this)}\n        initialValues={{\n          name: entity ? entity.name : '',\n          description: entity ? entity.description : '',\n        }}\n      >\n        <Form.Item\n          label=\"用户名\"\n          name=\"name\"\n          rules={[{ required: true, message: '请输入项目名' }]}\n        >\n          <Input placeholder=\"请输入用户名\" />\n        </Form.Item>\n        <Form.Item label=\"描述\" name=\"description\" rules={[{ required: true, message: '请输入描述' }]}>\n          <TextArea rows={4} placeholder=\"请输入描述\"/>\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"m-r-12\">\n            {i18n.t('action.save')}\n          </Button>\n          <Button onClick={this.cancel.bind(this)}> {i18n.t('action.cancel')}</Button>\n        </Form.Item>\n      </Form>\n    )\n  }\n}\n","// This icon file is generated automatically.\nvar SnippetsOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 112H724V72c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v40H500V72c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v40H320c-17.7 0-32 14.3-32 32v120h-96c-17.7 0-32 14.3-32 32v632c0 17.7 14.3 32 32 32h512c17.7 0 32-14.3 32-32v-96h96c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM664 888H232V336h218v174c0 22.1 17.9 40 40 40h174v338zm0-402H514V336h.2L664 485.8v.2zm128 274h-56V456L544 264H360v-80h68v32c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-32h152v32c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-32h68v576z\" } }] }, \"name\": \"snippets\", \"theme\": \"outlined\" };\nexport default SnippetsOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SnippetsOutlinedSvg from \"@ant-design/icons-svg/es/asn/SnippetsOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SnippetsOutlined = function SnippetsOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: SnippetsOutlinedSvg\n  }));\n};\n\nSnippetsOutlined.displayName = 'SnippetsOutlined';\nexport default /*#__PURE__*/React.forwardRef(SnippetsOutlined);","import React, { Component, Fragment } from 'react'\nimport { Table, Input, Button, Tooltip, Modal } from 'antd'\n\nimport { ContentLayoutComponent } from '@components/index'\nimport { MODAL_SIZE } from '@constants/index'\nimport ProjectCollecrtionComponent from './ProjectCollection'\nimport { listMixin } from '@components/Mixin'\nimport {\n  getProjects,\n  createProject,\n  updateProject,\n  getProjectDetail,\n  deleteProject,\n} from '@apis/index'\nimport type { IListMixin } from '@interfaces/mixin'\nimport {\n  SettingOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  SearchOutlined,\n  PlusOutlined,\n  SnippetsOutlined,\n} from '@ant-design/icons'\nimport i18n from 'i18next'\n\nclass UserView extends Component<IListMixin, any> {\n  init() {\n    return {\n      fetchAction: getProjects,\n      getDetailAction: getProjectDetail,\n      createAction: createProject,\n      updateAction: updateProject,\n      deleteAction: deleteProject,\n    }\n  }\n\n  editAction(record) {\n    this.props.editEntity(record._id)\n  }\n\n  deleteAction(record) {\n    this.props.deleteEntity(record._id)\n  }\n\n  detailAction(record){\n    // @ts-ignore\n    const { history } = this.props\n    history.push(`/projects/${record._id}`)\n  }\n\n  getTable() {\n    const { data, loading, pagination, getRowKey } = this.props\n    const columns = [\n      {\n        title: i18n.t('list.name'),\n        dataIndex: 'name',\n        key: 'name',\n        render: (text) => text,\n      },\n      {\n        title: i18n.t('list.description'),\n        dataIndex: 'description',\n        key: 'description',\n      },\n      //   {\n      //     title: i18n.t('list.address'),\n      //     dataIndex: 'address',\n      //     key: 'address',\n      //   },\n      {\n        title: i18n.t('list.operation'),\n        key: 'action',\n        width: 200,\n        render: (text, record) => (\n          <span>\n            {/* <span className=\"m-l-12 m-r-12 icon-action\">\n              <SettingOutlined /> {i18n.t('action.setting')}\n            </span> */}\n            <span className=\"m-l-12 m-r-12 icon-action\">\n              <Tooltip placement=\"top\" title={i18n.t('action.edit')}>\n                <SnippetsOutlined onClick={this.detailAction.bind(this, record)} />\n              </Tooltip>\n            </span>\n            <span className=\"m-l-12 m-r-12 icon-action\">\n              <Tooltip placement=\"top\" title={i18n.t('action.edit')}>\n                <EditOutlined onClick={this.editAction.bind(this, record)} />\n              </Tooltip>\n            </span>\n            <span className=\"m-l-12 m-r-12 icon-action\">\n              <Tooltip placement=\"top\" title={i18n.t('action.delete')}>\n                <DeleteOutlined onClick={this.deleteAction.bind(this, record)} />\n              </Tooltip>\n            </span>\n          </span>\n        ),\n      },\n    ]\n\n    return (\n      <Table\n        rowKey={getRowKey}\n        pagination={pagination}\n        loading={loading}\n        bordered={true}\n        columns={columns}\n        dataSource={data}\n      />\n    )\n  }\n\n  render() {\n    const {\n      searchAction,\n      isCollectionVisible,\n      openCollection,\n      closeCollection,\n      collectionCallBack,\n      entity,\n    } = this.props\n    return (\n      <ContentLayoutComponent>\n        <Fragment key=\"left\">\n          <Input\n            className=\"search\"\n            onKeyDown={searchAction}\n            suffix={<SearchOutlined />}\n            placeholder={i18n.t('list.search')}\n          />\n        </Fragment>\n        <Fragment key=\"actions\">\n          <Button\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            className={`${'action-btn'}`}\n            onClick={openCollection}\n          >\n            {i18n.t('action.create')}\n          </Button>\n        </Fragment>\n        <Fragment key=\"main\">\n          {this.getTable()}\n          <Modal\n            title={i18n.t('action.create')}\n            visible={isCollectionVisible}\n            width={MODAL_SIZE.md}\n            destroyOnClose={true}\n            footer={false}\n            onCancel={closeCollection}\n          >\n            {\n              // @ts-ignore\n              <ProjectCollecrtionComponent entity={entity} callback={collectionCallBack} />\n            }\n          </Modal>\n        </Fragment>\n      </ContentLayoutComponent>\n    )\n  }\n}\n\nexport default listMixin(UserView)\n","/*\n * @Author: D.Y\n * @Date: 2021-04-20 19:17:58\n * @LastEditTime: 2021-04-24 09:36:00\n * @LastEditors: D.Y\n * @FilePath: /arthemis-client/src/apis/scrum.ts\n * @Description:\n */\nimport type { IScrum } from '@interfaces/scrum'\nimport request from '@utils/request'\n\nexport const getProjectScrums = (params = {}) => {\n  return request({\n    url: '/scrums',\n    method: 'get',\n    params,\n  })\n}\n\nexport const createScrum = (data: IScrum) => {\n  return request({\n    url: '/scrums',\n    method: 'post',\n    data,\n  })\n}\n\nexport const updateScrum = (_id, data: IScrum) => {\n  return request({\n    url: `/scrums/${_id}`,\n    method: 'put',\n    data,\n  })\n}\n\nexport const getScrumDetail = (_id, params = {}) => {\n  return request({\n    url: `/scrums/${_id}`,\n    method: 'get',\n    params,\n  })\n}\n\nexport const deleteScrum = (_id) => {\n  return request({\n    url: `/scrums/${_id}`,\n    method: 'delete',\n  })\n}\n","/*\n * @Author: D.Y\n * @Date: 2021-04-14 19:16:26\n * @LastEditTime: 2021-04-21 10:02:26\n * @LastEditors: D.Y\n * @FilePath: /arthemis-client/src/apis/tasks.ts\n * @Description:\n */\nimport type { Task } from '@interfaces/task'\nimport request from '@utils/request'\n\nexport const createTask = (data: Task) => {\n  return request({\n    url: '/tasks',\n    method: 'post',\n    data,\n  })\n}\n\nexport const updateTask = (_id: string, data: Task) => {\n  return request({\n    url: `/tasks/${_id}`,\n    method: 'put',\n    data,\n  })\n}\n\nexport const deleteTask = (_id: string) => {\n  return request({\n    url: `/tasks/${_id}`,\n    method: 'delete',\n  })\n}\n\nexport const getTaskDetail = (_id: string, params = {}) => {\n  return request({\n    url: `/tasks/${_id}`,\n    method: 'get',\n    params,\n  })\n}\n\nexport const getTasks = (params = {}) => {\n  return request({\n    url: '/tasks',\n    method: 'get',\n    params,\n  })\n}\n\nexport const sortTasks = (\n  _id: string,\n  data: {\n    fromId: string\n    toId: string\n    oldIndex: number\n    newIndex: number\n  },\n) => {\n  return request({\n    url: `/tasks/${_id}/sort`,\n    method: 'post',\n    data,\n  })\n}\n\nexport const summaryTask = (data: { content: string; dateNumber: string }) => {\n  return request({\n    url: '/task-summary',\n    method: 'post',\n    data,\n  })\n}\nexport const getSummary = (params = {}) => {\n  return request({\n    url: '/task-summary',\n    method: 'get',\n    params,\n  })\n}\n","/*\n * @Author: D.Y\n * @Date: 2021-02-04 15:27:20\n * @LastEditTime: 2021-04-20 15:54:24\n * @LastEditors: D.Y\n * @FilePath: /arthemis-client/src/apis/project.ts\n * @Description: \n */\n\nimport type { IProject } from '@interfaces/project'\nimport request from '@utils/request'\n\n\nexport const getProjects = (params = {}) => {\n  return request({\n    url: '/projects',\n    method: 'get',\n    params,\n  })\n}\n\nexport const createProject = (data: IProject) => {\n  return request({\n    url: '/projects',\n    method: 'post',\n    data,\n  })\n}\n\nexport const getProjectDetail = (id: string, params = {}) => {\n  return request({\n    url: `/projects/${id}`,\n    method: 'get',\n    params,\n  })\n}\n\nexport const updateProject = (id: string, data: IProject) => {\n  return request({\n    url: `/projects/${id}`,\n    method: 'put',\n    data,\n  })\n}\n\nexport const deleteProject = (id: string) => {\n  return request({\n    url: `/projects/${id}`,\n    method: 'delete',\n  })\n}\n","/*\n * @Author: D.Y\n * @Date: 2021-02-04 18:55:58\n * @LastEditTime: 2021-04-20 19:18:06\n * @LastEditors: D.Y\n * @FilePath: /arthemis-client/src/apis/index.ts\n * @Description:\n */\nexport * from './tasks'\nexport * from './users'\nexport * from './project'\nexport * from './scrum'\n"],"sourceRoot":""}